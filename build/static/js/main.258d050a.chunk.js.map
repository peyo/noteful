{"version":3,"sources":["00-NotefulContext.js","config.js","01-Main.js","02-Folder.js","03-Note.js","04-AddFolder.js","05-AddNote.js","06-ErrorBoundary.js","App.js","index.js"],"names":["NotefulContext","React","createContext","folders","notes","onDeleteNote","onAddFolder","onAddNote","getNotes","Main","state","noteId","callback","fetch","config","method","headers","then","data","context","catch","error","setState","className","this","map","folder","key","id","to","name","note","modified","onClick","Component","contextType","Folder","folder_id","parseInt","props","match","params","folderId","Note","history","push","find","content","AddFolder","goBack","e","preventDefault","target","value","Date","body","JSON","stringify","res","ok","Error","json","err","message","onClickGoBack","onSubmit","handleSubmit","htmlFor","type","required","onClickCancel","withRouter","AddNote","folderOption","ErrorBoundary","hasError","children","App","newNotes","filter","getFolder","status","contextValue","Provider","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.258d050a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NotefulContext = React.createContext({\n  folders: [],\n  notes: [],\n  onDeleteNote: () => { },\n  onAddFolder: () => { },\n  onAddNote: () => { },\n  getNotes: () => { }\n})\n\nexport default NotefulContext;","export default {\n  API_ENDPOINT: `https://floating-headland-60183.herokuapp.com`\n}","import React from \"react\";\nimport NotefulContext from \"./00-NotefulContext\";\nimport { Link } from \"react-router-dom\";\nimport config from \"./config\";\n\nclass Main extends React.Component {\n  static contextType = NotefulContext;\n  state = {\n    notes: []\n  };\n\n  onDeleteNote(noteId, callback) {\n    fetch(config.API_ENDPOINT + `/api/notes/${noteId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n      .then(data => {\n        callback(noteId)\n        this.context.getNotes()\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n\n    return (\n      <div className=\"wrapper-main\">\n        <div className=\"main-sidebar\">\n          <ul className=\"folderlist\">\n            {this.context.folders.map(folder => (\n              <li key={folder.id} className=\"folder-li\">\n                <div className=\"folder-div\">\n                  <Link\n                    to={`/folders/${folder.id}`}\n                    className=\"folder-button\"\n                  >\n                    {folder.name}\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n          <div className=\"main-sidebar-button-div\">\n            <Link to={\"/addfolder\"} className=\"add-folder-button\">\n              Add Folder\n            </Link>\n          </div>\n        </div>\n        <div className=\"main-page\">\n          <ul className=\"main-page-list\">\n            {this.context.notes.map(note => (\n              <li key={note.id} className=\"note-item\">\n                <div className=\"note-title\">{note.name}</div>\n                <div className=\"note-date\">{note.modified}</div>\n                <button\n                  className=\"note-button\"\n                  onClick={() => {\n                    this.onDeleteNote(note.id, this.context.onDeleteNote);\n                  }}\n                >\n                  Delete Note\n                </button>\n              </li>\n            ))}\n          </ul>\n          <div className=\"main-page-button-div\">\n            <Link to={\"/addnote\"} className=\"main-page-button\">\n              Add Note\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport NotefulContext from \"./00-NotefulContext\";\nimport config from \"./config\";\n\nclass Folder extends React.Component {\n  static contextType = NotefulContext;\n\n  state = {\n    error: null,\n    notes: []\n  };\n\n  onDeleteNote(noteId, callback) {\n    fetch(config.API_ENDPOINT + `/api/notes/${noteId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n      .then(data => {\n        callback(noteId)\n        this.context.getNotes()\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper-folder\">\n        <div className=\"main-sidebar\">\n          <ul className=\"folderlist\">\n            {this.context.folders.map(folder =>\n              <li\n                key={folder.id}\n                className=\"folder-li\">\n                <div className=\"folder-div\">\n                  <NavLink\n                    to={`/folders/${folder.id}`}\n                    className=\"folder-button\"\n                  >\n                    {folder.name}\n                  </NavLink>\n                </div>\n              </li>\n            )}\n          </ul>\n          <div className=\"main-sidebar-button-div\">\n            <Link\n              to={\"/addfolder\"}\n              className=\"add-folder-button\" >\n              Add Folder\n            </Link>\n          </div>\n        </div>\n        <div className=\"main-page\">\n          <ul className=\"main-page-list\">\n            {this.context.notes.map((note) =>\n              note.folder_id === parseInt(this.props.match.params.folderId)\n                ? <li\n                  key={note.id}\n                  className=\"note-item\">\n                  <Link\n                    to={`/notes/${note.id}`}\n                    className=\"note-title\">\n                    {note.name}\n                  </Link>\n                  <div className=\"note-date\">\n                    {note.modified}\n                  </div>\n                  <button\n                    className=\"note-button\"\n                    onClick={() => {\n                      this.onDeleteNote(note.id, this.context.onDeleteNote);\n                    }}>\n                    Delete Note\n                  </button>\n                </li>\n                : null\n            )}\n          </ul>\n          <Link\n            to={\"/addnote\"}\n            className=\"main-page-button\">\n            Add Note\n            </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Folder;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NotefulContext from \"./00-NotefulContext\";\nimport config from \"./config\";\n\nclass Note extends React.Component {\n  static contextType = NotefulContext;\n\n  state = {\n    error: null,\n    notes: []\n  };\n\n  onDeleteNote(note, callback) {\n    fetch(config.API_ENDPOINT + `/api/notes/${note.id}`, {\n      method: 'DELETE',\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n      .then(data => {\n        callback(note.id)\n        this.props.history.push(`/folders/${note.folder_id}`)\n      })\n\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    const note = this.context.notes.find(note => note.id === parseInt(this.props.match.params.noteId)) || {}\n    const folder = this.context.folders.find(folder => folder.id === note.folder_id) || {}\n\n\n    return (\n      <div className=\"wrapper-note\">\n        <div className=\"main-sidebar\">\n          <div className=\"main-sidebar-foldername\">\n            {folder.name}\n          </div>\n          <div className=\"main-sidebar-button-div\">\n            <Link\n              to={`/folders/${folder.id}`}\n              className=\"go-back-button\">\n              Go Back\n            </Link>\n          </div>\n        </div>\n        <div className=\"main-page\">\n          <div className=\"main-page-list\">\n            <div\n              key={note.id}\n              className=\"note-item\">\n              <div className=\"note-title\">\n                {note.name}\n              </div>\n              <div className=\"note-date\">\n                {note.modified}\n              </div>\n              <button\n                className=\"note-button\"\n                onClick={() => {\n                  this.onDeleteNote(\n                    note,\n                    this.context.onDeleteNote,\n                  );\n                }}>\n                Delete Note\n              </button>\n            </div>\n            <div className=\"note-content\">\n              {note.content}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Note;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport NotefulContext from \"./00-NotefulContext\";\nimport config from \"./config\";\n\nclass AddFolder extends React.Component {\n  static contextType = NotefulContext;\n  \n  state = {\n    error: null\n  };\n\n  onClickGoBack() {\n    this.props.history.goBack()\n  }\n\n  onClickCancel() {\n    this.props.history.goBack()\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { name } = e.target\n    const folder = {\n      name: name.value,\n      modified: new Date()\n    };\n    this.setState({ error: null });\n\n    fetch(config.API_ENDPOINT + `/api/folders`, {\n        method: \"POST\",\n        body: JSON.stringify(folder),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      })\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong. Try again later.');\n        }\n        return res.json();\n      })\n      .then((folder) => {\n        name.value = \"\";\n        this.context.onAddFolder(folder);\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        })\n      })\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper-addfolder\">\n        <div className=\"main-sidebar\">\n          <div className=\"main-sidebar-go-back-button\">\n            <button\n              onClick={() => this.onClickGoBack()}\n              className=\"go-back-button\">\n              Go Back\n            </button>\n          </div>\n        </div>\n        <div className=\"main-page-addfolder\">\n          <div className=\"main-page-list-addfolder\">\n            <form\n              className=\"addfolder-form\"\n              onSubmit={e => this.handleSubmit(e)}>\n              <div className=\"addfolder-foldername\">\n                <label\n                  className=\"label\"\n                  htmlFor=\"foldername\">\n                  Name\n                </label><br />\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  required\n                />\n              </div>\n              <div className=\"addfolder-buttons\">\n                <button\n                  className=\"add-folder-button\"\n                  type=\"submit\">\n                  Add Folder\n                </button>\n                {\" \"}\n                <button\n                  className=\"go-back-button\"\n                  type=\"button\"\n                  onClick={() => this.onClickCancel()}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(AddFolder);","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport NotefulContext from \"./00-NotefulContext\";\nimport config from \"./config\";\n\nclass AddNote extends React.Component {\n  static contextType = NotefulContext;\n\n  state = {\n    error: null\n  }\n\n  onClickGoBack() {\n    this.props.history.goBack()\n  }\n\n  onClickCancel() {\n    this.props.history.goBack()\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n\n    const { name, content, folderId } = e.target;\n    const note = {\n      name: name.value,\n      folder_id: folderId.value,\n      content: content.value\n    };\n    this.setState({ error: null });\n    fetch(config.API_ENDPOINT + `/api/notes`, {\n      method: \"POST\",\n      body: JSON.stringify(note),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong. Try again later.');\n        }\n        return res.json();\n      })\n      .then((note) => {\n        name.value = \"\";\n        folderId.value = \"\";\n        content.value = \"\";\n        this.context.onAddNote(note);\n        this.props.history.goBack();\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n  }\n\n  render() {\n    const {\n      folders\n    } = this.context;\n\n    const folderOption = folders.map(folder => {\n      return (\n        <option\n          value={folder.id}\n          key={folder.id}\n        >\n          {folder.name}\n        </option>\n      )\n    })\n\n    return (\n      <div className=\"wrapper-addnote\">\n        <div className=\"main-sidebar\">\n          <div className=\"main-sidebar-go-back-button\">\n            <button\n              onClick={() => this.onClickGoBack()}\n              className=\"go-back-button\">\n              Go Back\n            </button>\n          </div>\n        </div>\n        <div className=\"main-page-addnote\">\n          <div className=\"main-page-list-addnote\">\n            <form\n              className=\"addnote-form\"\n              onSubmit={e => this.handleSubmit(e)}>\n              <div className=\"addnote-notename\">\n                <label\n                  className=\"label\"\n                  htmlFor=\"notename\">\n                  Name\n                </label><br />\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  required\n                />\n              </div>\n              <div className=\"addnote-notecontent\">\n                <label\n                  className=\"label\"\n                  htmlFor=\"notecontent\">\n                  Content\n                </label><br />\n                <textarea\n                  className=\"textarea\"\n                  name=\"content\"\n                  id=\"content\"\n                  required\n                />\n              </div>\n              <div className=\"addnote-notefolder\">\n                <label\n                  className=\"label\"\n                  htmlFor=\"notefolder\">\n                  Folder\n                </label><br />\n                <select\n                  name=\"folderId\"\n                  id=\"folderId\"\n                  required\n                >\n                  {folderOption}\n                </select>\n              </div>\n              <div className=\"addnote-buttons\">\n                <button\n                  className=\"go-back-button\"\n                  type=\"submit\">\n                  Add Note\n                </button>\n                {\" \"}\n                <button\n                  className=\"go-back-button\"\n                  type=\"button\"\n                  onClick={() => this.onClickCancel()}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(AddNote);","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  state = {\n      hasError: false\n    };\n  \n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <p>Could not display this element.</p>\n      );\n    }\n    return (\n      this.props.children\n    );\n  }\n}\n\nexport default ErrorBoundary;","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport Main from \"./01-Main\";\nimport Folder from \"./02-Folder\";\nimport Note from \"./03-Note\";\nimport AddFolder from \"./04-AddFolder\";\nimport AddNote from \"./05-AddNote\";\nimport NotefulContext from \"./00-NotefulContext\";\nimport ErrorBoundary from \"./06-ErrorBoundary\";\nimport \"./App.css\";\nimport config from \"./config\";\n\nclass App extends React.Component {\n  state = {\n    folders: [],\n    notes: []\n  };\n\n  onDeleteNote = noteId => {\n    const newNotes = this.state.notes.filter(note => note.id !== noteId)\n    this.setState({\n      notes: newNotes\n    })\n  }\n\n  onAddFolder = folder => {\n    this.setState({\n      folders: [...this.state.folders, folder]\n    })\n  }\n\n  onAddNote = note => {\n    this.setState({\n      notes: [...this.state.notes, note]\n    })\n  }\n\n  getFolder = folder => {\n    fetch(config.API_ENDPOINT + `/api/folders`, {\n      method: \"GET\",\n    })\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res.json();\n      })\n      .then(folders => this.setState({ folders }))\n      .catch(error => this.setState({ error }))\n  }\n\n  getNotes = () => {\n    fetch(config.API_ENDPOINT + `/api/notes`, {\n      method: \"GET\",\n    })\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res.json();\n      })\n      .then(notes => this.setState({ notes }))\n      .catch(error => this.setState({ error }));\n  }\n\n  componentDidMount() {\n    this.getFolder()\n    this.getNotes()\n  }\n\n  render() {\n    const contextValue = {\n      folders: this.state.folders,\n      notes: this.state.notes || [],\n      onDeleteNote: this.onDeleteNote,\n      onAddFolder: this.onAddFolder,\n      onAddNote: this.onAddNote,\n      getFolder: this.getFolder,\n      getNotes: this.getNotes\n    };\n    return (\n      <div className=\"App\">\n        <main>\n          <header>\n            <h1>\n              <Link className=\"main\" to=\"/\">\n                Noteful\n              </Link>\n            </h1>\n          </header>\n          <NotefulContext.Provider value={contextValue}>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <ErrorBoundary>\n                  <Main />\n                </ErrorBoundary>\n              )}\n            />\n            <Route\n              path={`/folders/:folderId`}\n              render={(props) => (\n                <ErrorBoundary>\n                  <Folder {...props} />\n                </ErrorBoundary>\n              )}\n            />\n            <Route\n              path={`/notes/:noteId`}\n              render={(props) => (\n                <ErrorBoundary>\n                  <Note {...props} />\n                </ErrorBoundary>\n              )}\n            />\n            <Route\n              path=\"/addfolder\"\n              render={() => (\n                <ErrorBoundary>\n                  <AddFolder />\n                </ErrorBoundary>\n              )}\n            />\n            <Route\n              path=\"/addnote\"\n              render={() => (\n                <ErrorBoundary>\n                  <AddNote />\n                </ErrorBoundary>\n              )}\n            />\n          </NotefulContext.Provider>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}